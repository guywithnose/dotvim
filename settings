" vim: filetype=vim
set autoindent
set autoread
set background=dark
set backspace=indent,eol,start
set cmdheight=2
set expandtab
set formatoptions=tcroql
set history=1000
set hlsearch
set ignorecase
set incsearch
set infercase
set laststatus=2
set linebreak
set modeline
set nrformats=
set number
set scrolloff=3
set shiftwidth=4
set smartcase
set smartindent
set softtabstop=4
set spelllang=en_us
set statusline=
set autowrite
set statusline+=%y                           " Filetype
set statusline+=\ %h                         " Help flag
set statusline+=%m                           " Modified flag
set statusline+=%r                           " Readonly flag
set statusline+=[%{fugitive#head()}]         " Fugitive data
set statusline+=\ %F                         " Full file name
set statusline+=\ [%{cfi#get_func_name()}]   " Current function
set statusline+=%=                           " Split left/right
"set statusline+=%{ObsessionStatus()}         " Obsession Status
set statusline+=%#warningmsg#
set statusline+=%{LinterStatus()}
set statusline+=%*
set statusline+=%a                           " Argument list status
set statusline+=\ %q                         " Quickfix status
set statusline+=\ %3b                        " Value of charcter under cursor
set statusline+=\ %4l\\%-4L                  " Current / total lines
set statusline+=%4c%V                        " Column / virtual column
set statusline+=\ %2p%%                      " Percent through file
set statusline+=\ b:%n                       " Buffer number
set tabstop=4
set viewoptions=cursor,folds,slash,unix
set wildmode=longest:full,full
set wildignorecase
set path+=**
set wildmenu
colorscheme torte
if &diff
  colorscheme evening
endif

syntax on
filetype on
filetype plugin indent on

function! LinterStatus() abort
    let l:counts = ale#statusline#Count(bufnr(''))

    let l:all_errors = l:counts.error + l:counts.style_error
    let l:all_non_errors = l:counts.total - l:all_errors

    return l:counts.total == 0 ? 'OK' : printf(
                \   '%dW %dE',
                \   all_non_errors,
                \   all_errors
                \)
endfunction
