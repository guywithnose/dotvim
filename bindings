" vim: filetype=vim
" To sort bindings use <Leader>ex with cursor on next line
" execute "normal jj!ipsort -k2,2 -k1,1\<return>"

vnoremap < <gv
vnoremap > >gv
nmap     '' cs"'
nmap     "" cs'"
nnoremap _= :normal gg=G<CR>
nnoremap & :&&<return>
xnoremap & :&&<return>
cnoremap %% <c-r>=fnameescape(expand('%:h')).'/'<return>
cnoremap <c-a> <Home>
nnoremap <c-c> "+yy
vnoremap <c-c> "+y
cnoremap <c-n> <down>
cnoremap <c-p> <up>
inoremap <F5> <c-o>:redraw!<return>
nnoremap <F5> :<c-u>redraw!<return>
inoremap <Leader>' <c-o>:ALEToggleBuffer<return>
noremap  <Leader>' :<c-u>ALEToggleBuffer<return>
noremap  <Leader>cr :call RunCronusTask("development")<return>
noremap  <Leader>cpr :call RunCronusTask("production")<return>
"noremap  <Leader>b :execute 'Obsess ' . GetObsessFile()<return>
nmap     <Leader>efp :FZF %%<return>
inoremap <Leader>eh :<c-u>VimwikiAll2HTML<return>
noremap  <Leader>eh <esc>:VimwikiAll2HTML<return>
noremap  <Leader>ex :let oldSearch=@/<return>$?^"*.?e<return>"sy$:let @/=oldSearch<return>:<c-r>s<return>
nnoremap <Leader><F5> :<c-u>silent nohlsearch<return><c-l>
inoremap <Leader>gc <esc>:Gcommit<return>
noremap  <Leader>gc :<c-u>Gcommit<return>
inoremap <Leader>gd <esc>:Gdiff<return>
noremap  <Leader>gd :<c-u>Gdiff<return>
inoremap <Leader>ge <esc>:Gedit<return>
noremap  <Leader>ge :<c-u>Gedit<return>
inoremap <Leader>gi <esc>:Git rebase --interactive upstream/master<return>
noremap  <Leader>gi :<c-u>Git rebase --interactive upstream/master<return>
inoremap <Leader>gp <esc>:call PushCurrentBranch()<return>
noremap  <Leader>gp :<c-u>call PushCurrentBranch()<return>
inoremap <Leader>gpf <esc>:call PushCurrentBranch(1)<return>
noremap  <Leader>gpf :<c-u>call PushCurrentBranch(1)<return>
inoremap <Leader>gr <esc>:Git rebase upstream/master<return>
noremap  <Leader>gr :<c-u>Git rebase upstream/master<return>
inoremap <Leader>gs <esc>:Gstatus<return>
noremap  <Leader>gs :<c-u>Gstatus<return>
noremap  <Leader>i :<c-u>call JumpFileForward()<return>
inoremap <Leader>m <esc>:Dispatch<return>
noremap  <Leader>m :Dispatch<return>
inoremap <Leader>o <esc>:call JumpFileBackward()<return>
noremap  <Leader>o :<c-u>call JumpFileBackward()<return>
noremap  <Leader>p :<c-u>EnableFastPHPFolds<return>zM
inoremap <Leader>q <esc>:exit<return>
noremap  <Leader>q :exit<return>
inoremap <Leader>r <esc>:<c-u>update<return>:Dispatch! refreshBrowser<return>
noremap  <Leader>r :<c-u>update<return>:Dispatch! refreshBrowser<return>
inoremap <Leader>R <esc>:<c-u>update<return>:Dispatch! refreshBrowser<return>:VdebugStart<return>
noremap  <Leader>R :<c-u>update<return>:Dispatch! refreshBrowser<return>:VdebugStart<return>
noremap  <Leader>sh :SidewaysLeft<return>
noremap  <Leader>sl :SidewaysRight<return>
inoremap <Leader>w <esc>:update<return>
noremap  <Leader>w :<c-u>update<return>
noremap  <Leader>x :copen<return>G/{\"error<return>va}ly:tabnew<return>p:%s/\n\|\| //g<return>:%!json_pp<return>:%s/\\n/\r/g<return>
noremap  <Leader>X :copen<return>G/{\"error<return>va}y:tabnew<return>p:%s/\n\|\| //g<return>:%!json_pp<return>:%s/\\n/\r/g<return>
nnoremap <leader>* :call ag#Ag('lgrep', shellescape('func (((?!Mock).)* )?' . expand("<cword>")))<CR>
vnoremap <leader>* :<C-u>call VisualStarSearchSet('/', 'raw')<CR>:call ag#Ag('lgrep', shellescape('func (((?!Mock).)* )?' . @/))<CR>

au FileType go nmap <leader>d <Plug>(go-def-tab)
au FileType go nmap <leader>d <Plug>(go-def-tab)

" Edit and source vimrc file
execute 'nnoremap <Leader>ev :tabnew ' . expand('<sfile>:h') . '/vimrc<return>:lcd ' . expand('<sfile>:h') . '<return>'
execute 'noremap <Leader>sv :<c-u>source ~/.vimrc<return>:source ' . expand('<sfile>:h') . '/plugin/loadLast.vim<return>'

" Sideways
omap aa <Plug>SidewaysArgumentTextobjA
xmap aa <Plug>SidewaysArgumentTextobjA
omap ia <Plug>SidewaysArgumentTextobjI
xmap ia <Plug>SidewaysArgumentTextobjI

" Remove deprecated Commentary bindings
silent! nunmap \\\
silent! nunmap \\u
silent! nunmap \\
silent! xunmap \\

:autocmd BufWritePost */src/dotvim/* source %
:autocmd BufWritePost /home/*/.tmux.conf silent !tmux source %

function! RunCronusTask(env)
  execute 'Dispatch APPLICATION_ENV=' . a:env . ' DEBUG=true ./cronus.php ' . substitute(substitute(expand('%:p:r'), '/home/dude/src/cronus-tasks/src/Tasks/', '', ''), '/', '\\\\', '') . ' 1'
endfunction
